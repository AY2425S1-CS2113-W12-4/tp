@startuml

actor User

participant ":QuizManager" as QM
participant ":QuizSession" as QS
participant ":Quiz"
participant ":QuizTimer" as QT
participant ":QuizResults" as QR

User -> QM : selectQuizToAttempt("Loops")
activate QM

alt Topic not found
    QM -> QM : logger.warning("No such topic")
    deactivate QM
else Topic found
    QM -> QS : new QuizSession()
    activate QS
    QM -> QS : startQuiz(selectedTopic)

    QS -> Quiz : new Quiz(topic)
    activate Quiz

    QS -> User : "Enter time limit in seconds"
    User --> QS : timeLimitInSeconds

    QS -> User : "Enter question limit"
    User --> QS : questionLimit

    QS -> Quiz : start(timeLimitInSeconds, questionLimit)

    Quiz -> QT : new QuizTimer()
    activate QT
    Quiz -> QT : startTimer(timeLimitInSeconds)
end

alt questions available
    loop for each question
        Quiz -> Quiz : retrieve next question
        Quiz -> QT : isTimeUp()
        alt time not up
            Quiz -> User : display question and options
            User -> Quiz : answer question
            Quiz -> Quiz : handleQuestionInput()
        else time up
            break
        end
    end
else no questions
    Quiz -> Quiz : throw IllegalStateException("No questions.")
end

Quiz -> QT : cancelTimer()
deactivate QT
Quiz -> User : display score
deactivate Quiz

QS --> QM : quiz completed
QM -> QM : addResultsAndPrintScore()
QM -> QS : getQuizScore()
QS --> QM : return score
QM -> QR : generateComment(score)
QR -> QR : addResult(score, comment)
deactivate QS

deactivate QM

@enduml
